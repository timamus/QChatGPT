name: Main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Install Quasar CLI
        run: npm install -g @quasar/cli

      - name: Build Quasar Electron App for Linux
        run: quasar build -m electron

      - name: Create ZIP Archive for Linux
        run: |
          cd dist/electron/Packaged
          zip -r QChatGPT-linux-x64.zip QChatGPT-linux-x64

      - name: Upload Linux Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: qchatgpt-linux
          path: dist/electron/Packaged/QChatGPT-linux-x64.zip

      - name: Create Version Info
        run: echo ${{ github.sha }} > Version.txt

      - name: Test
        run: cat Version.txt

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Install Quasar CLI
        run: npm install -g @quasar/cli

      - name: Build Quasar Electron App for Windows
        run: quasar build -m electron

      - name: Create ZIP Archive for Windows
        run: |
          cd dist/electron/Packaged
          Get-ChildItem -Force # Check directory structure
          Compress-Archive -Path QChatGPT-win32-x64 -DestinationPath QChatGPT-win32-x64.zip

      - name: Upload Windows Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: qchatgpt-windows
          path: dist/electron/Packaged/QChatGPT-win32-x64.zip

      - name: Create Version Info
        run: echo ${{ github.sha }} > Version.txt

      - name: Test
        run: cat Version.txt

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Install Quasar CLI
        run: npm install -g @quasar/cli

      - name: Build Quasar Electron App for MacOS
        run: quasar build -m electron

      - name: Create ZIP Archive for MacOS
        run: |
          cd dist/electron/Packaged
          ls -la # Check directory structure
          zip -r QChatGPT-darwin-arm64.zip QChatGPT-darwin-arm64

      - name: Upload MacOS Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: qchatgpt-macos
          path: dist/electron/Packaged/QChatGPT-darwin-arm64.zip

      - name: Create Version Info
        run: echo ${{ github.sha }} > Version.txt

      - name: Test
        run: cat Version.txt

  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Install Quasar CLI
        run: npm install -g @quasar/cli

      - name: Install Capacitor Android
        run: npm install @capacitor/android

      - name: Install Android SDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools: 30.0.3

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      - name: Set up environment variables
        run: |
          echo "ANDROID_HOME=$HOME/Android/Sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$HOME/Android/Sdk" >> $GITHUB_ENV
          echo "PATH=$PATH:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_ENV

      - name: Build Quasar Capacitor App for Android
        run: quasar build -m capacitor -T android --skip-pkg

      - name: Create APK for Android
        run: |
          cd src-capacitor/android
          chmod +x ./gradle
          ./gradlew assembleRelease

      - name: Upload Android Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: qchatgpt-android
          path: src-cordova/app/build/outputs/apk/release/app-release.apk

      - name: Create Version Info
        run: echo ${{ github.sha }} > Version.txt

      - name: Test
        run: cat Version.txt

  publish:
    name: Publish Version
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Linux Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: qchatgpt-linux

      - name: Download Windows Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: qchatgpt-windows

      - name: Download MacOS Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: qchatgpt-macos

      - name: Get version from package.json
        id: get_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Create Version
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          ls -la # Check directory structure
          gh release create "v${{ env.VERSION }}" QChatGPT-linux-x64.zip QChatGPT-win32-x64.zip QChatGPT-darwin-arm64.zip -t "Version ${{ env.VERSION }}" -n "Version notes for ${{ env.VERSION }}" --target main
