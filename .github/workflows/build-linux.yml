name: Main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Install Quasar CLI
        run: npm install -g @quasar/cli

      - name: Build Quasar Electron App
        run: quasar build -m electron

      - name: Create ZIP Archive
        run: |
          cd dist/electron/Packaged
          zip -r QChatGPT-linux-x64.zip QChatGPT-linux-x64

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: qchatgpt
          path: dist/electron/Packaged/QChatGPT-linux-x64.zip

      - name: Create Release Info
        run: echo ${{ github.sha }} > Release.txt

      - name: Test
        run: cat Release.txt

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: qchatgpt
          path: dist/electron/Packaged/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/electron/Packaged/QChatGPT-linux-x64.zip
            Release.txt
            LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

  publish:
    name: Publish Release
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Publish Release
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: gh release edit "${{ github.ref_name }}" --draft=false

      - name: Cleanup Old Releases
        uses: eregon/keep-last-n-releases@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          n: 3
          remove_tags_without_release: true
